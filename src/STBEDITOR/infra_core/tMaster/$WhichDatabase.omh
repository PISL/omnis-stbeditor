If tlDatabases.DAM='WebService'
	;  pass parameters to web service
	;  $callService (pFieldReference, row(TableClassName, CurrentMethodName, p1,...,pn) )     ;; result will be returned in pFieldReference, row() contains the parameters for the call
	Calculate ldtStart as #D
	Do ioWeb.$callFetch(lcDescription,irErrorSQL,row($cinst.$class().$name,$cmethod().$name,row(),lcDescription.$type,0,ilRESTextensions))
	Calculate inServiceMS as ddiff(kCentiSecond,ldtStart,#D)*10
	Calculate inRESTserverMS as ioWeb.inServerTime
	If ioWeb.irResponse.httpStatusCode=200
		;  the result should be in this object     ;; however there may be a SQL error
		If irErrorSQL.NativeErrorText<>''
			Calculate lcDescription as con(upp(tlDatabases.DAM),' ',tlDatabases.Name,' error: ',irErrorSQL.NativeErrorText)
		Else
			Calculate lcDescription as con(upp(tlDatabases.DAM),' ',tlDatabases.Name,' : ',lcDescription)
		End If
	Else
		Calculate lcDescription as con(upp(tlDatabases.DAM),' ',tlDatabases.Name,' http error: ',ioWeb.irResponse.httpStatusCode,' - ',irErrorSQL.NativeErrorText)
	End If
	Quit method lcDescription
End If

Do $cinst.$ImmediateSession(loSession,loStatement) Returns lbImmediateSession
If lbImmediateSession
	Do $cinst.$SetSession(loSession,loStatement)
Else If not(ibGoodConnectionToDb)
	Quit method kFalse
End If

Calculate lcDescription as con('dam: ',$cinst.$sessionobject.$damname)
Calculate lcDescription as con(lcDescription,', version: ',$cinst.$sessionobject.$version)
Calculate lcDescription as con(lcDescription,', host: ',$cinst.$sessionobject.$hostname)
If $cinst.$sessionobject.$damname='PGSQLDAM'
	If $cinst.$sessionobject.$database<>''
		Calculate lcDescription as con(lcDescription,', db: ',$cinst.$sessionobject.$database)
	End If
End If

Calculate lcDescription as con(lcDescription,', as: ',$cinst.$sessionobject.$username)

If lbImmediateSession
	Do $cinst.$SetSession(#NULL,#NULL,kTrue)
End If

Quit method lcDescription