Calculate lcTemp as pPath
While lcTemp<>''
	Calculate lcToken as strtok(nam(lcTemp),sys(9))
	Calculate lcPathBuildUp as con(lcPathBuildUp,pick(lcPathBuildUp<>'','',sys(9)),lcToken)
	Do FileOps.$doesfileexist(lcPathBuildUp) Returns lbExists
	If not(lbExists)
		If pFix
			Calculate lbCreateDirectory as kFalse
			If lcTemp<>''
				;  we are not at final token in path so it must be a directory that needs to be created
				Calculate lbCreateDirectory as kTrue
			Else If upp(pFileOrDirectory)='D'
				;  the path is a directory path
				Calculate lbCreateDirectory as kTrue
			End If
			If lbCreateDirectory
				;  not much point in getting unix permissions as it doesn't tell us what the current user can/cannot do
				Do FileOps.$getunixpermissions(lcParentPath) Returns lcPermissions
				If 1=1     ;; so ignore the permissions and try to create directory
					Do FileOps.$createdir(lcPathBuildUp) Returns lnFileOpsError
					If lnFileOpsError<>0
						Quit method kFalse
					End If
				Else
					Quit method kFalse
				End If
			Else
				If lcTemp=''
					;  last token in file path is a file, not a directory     ;; this method validates the directory path
					;  so continue to return kTrue
				Else
					Quit method kFalse     ;; I don't think this line will ever be executed
				End If
			End If
		Else
			Quit method kFalse
		End If
	End If
	Calculate lcParentPath as lcPathBuildUp
End While
Quit method kTrue