Do irCredentials.$clear()

If pcServer<>''&pcAccountName<>''
	Calculate irCredentials.server as pcServer
	Calculate irCredentials.account as pcAccountName
	Calculate irCredentials.pw as pcPW
Else
	;  If an email has been requested from a runtime error for example, there may be no configCode
	;  and there may be no server options provided.  The code will call this method and we will have to
	;  attempt to resolve server issues internally.
	Do clServerCache.$search($ref.configCode='DEFAULT'&$ref.GO_SEQ=trGroupOrg.GO_SEQ,1,0,0,0) Returns lbFound
	If not(lbFound)
		Do clServerCache.$search($ref.configCode='DEFAULT',1,0,0,0) Returns lbFound
	End If
	If lbFound
		Calculate lrAttributes as clServerCache.attributes
		Calculate irCredentials.server as lrAttributes.server
		Calculate irCredentials.account as lrAttributes.senderAddress
		If lrAttributes.senderName<>''
			Calculate irCredentials.account as con(lrAttributes.senderName,'<',lrAttributes.senderAddress,'>')
		End If
		Do lrAttributes.$cols.$findname('password') Returns liColRef
		If liColRef
			Calculate irCredentials.pw as lrAttributes.password
		End If
	Else
		Do $AppError('email mechanism not configured')
	End If
End If
Calculate irCredentials.secure as pnSecure

Do method $calcauthtype (pAuthTypeList) Returns irCredentials.authenticationTypes
Do method $setDebugLog (pbDebugLog)
Do method $setTimeout (pnTimeout)

Calculate irCredentials.OAUTH2 as pcOauth2
Calculate irCredentials.realm as pcRealm
Calculate irCredentials.domain as pcDomain

Do iPropsList.$clear()
Do iPropsList.$merge(plJavaProperties)

Do iSmtp.$init(iMessage,irCredentials.server,irCredentials.secure,irCredentials.authenticationTypes,irCredentials.account,irCredentials.pw,irCredentials.OAUTH2,irCredentials.realm,irCredentials.domain,iPropsList) Returns lbOK
If not(lbOK)
	Calculate icErrorMessage as con('$init error ',iSmtp.$errorcode,': ',kDq,iSmtp.$errortext,kDq)
	Quit method kFalse
End If

Quit method kTrue